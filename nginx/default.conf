# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name api.ekowlabs.space db.ekowlabs.space gcp.ekowlabs.space;
    return 301 https://$server_name$request_uri;
}

# API server configuration (api.ekowlabs.space)
server {
    listen 443 ssl http2;
    server_name api.ekowlabs.space;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/api.ekowlabs.space.crt;
    ssl_certificate_key /etc/nginx/ssl/api.ekowlabs.space.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Logging
    access_log /var/log/nginx/api_access.log;
    error_log /var/log/nginx/api_error.log;

    # Health check endpoint
    location /health {
        return 200 '{"status": "OK", "service": "Nginx API", "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"}';
        add_header Content-Type application/json;
    }

    # Proxy all API requests to backend
    location /api/ {
        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
    }

    # Proxy root requests to backend
    location / {
        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
    }
}

# Database server configuration (db.ekowlabs.space)
server {
    listen 443 ssl http2;
    server_name db.ekowlabs.space;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/db.ekowlabs.space.crt;
    ssl_certificate_key /etc/nginx/ssl/db.ekowlabs.space.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Logging
    access_log /var/log/nginx/db_access.log;
    error_log /var/log/nginx/db_error.log;

    # Health check endpoint
    location /health {
        return 200 '{"status": "OK", "service": "MongoDB", "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"}';
        add_header Content-Type application/json;
    }

    # MongoDB proxy (if needed for external access)
    location /mongo/ {
        # This is a placeholder - MongoDB doesn't use HTTP
        # You might want to use a different approach for external MongoDB access
        return 404 '{"error": "Direct MongoDB access not available via HTTP"}';
        add_header Content-Type application/json;
    }

    # Default response for database domain
    location / {
        return 200 '{"message": "MongoDB Database Server", "status": "running", "domain": "db.ekowlabs.space"}';
        add_header Content-Type application/json;
    }
}

# Main VPS server configuration (gcp.ekowlabs.space)
server {
    listen 443 ssl http2;
    server_name gcp.ekowlabs.space;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/gcp.ekowlabs.space.crt;
    ssl_certificate_key /etc/nginx/ssl/gcp.ekowlabs.space.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Logging
    access_log /var/log/nginx/gcp_access.log;
    error_log /var/log/nginx/gcp_error.log;

    # Health check endpoint
    location /health {
        return 200 '{"status": "OK", "service": "VPS Main", "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"}';
        add_header Content-Type application/json;
    }

    # Main VPS landing page
    location / {
        return 200 '{"message": "GCP VPS Server", "status": "running", "services": {"api": "https://api.ekowlabs.space", "database": "https://db.ekowlabs.space"}, "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"}';
        add_header Content-Type application/json;
    }
}
