name: Deploy to VPS

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup SSH with passphrase support
      run: |
        # Create SSH directory
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        
        # Add SSH key with passphrase handling
        echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        
        # Start ssh-agent
        eval "$(ssh-agent -s)"
        
        # Add key to ssh-agent with passphrase
        echo "${{ secrets.SSH_PASSPHRASE }}" | ssh-add ~/.ssh/id_rsa

    - name: Add VPS to known hosts
      run: ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

    - name: Create .env file with secrets
      run: |
        echo "# MongoDB Configuration" > .env
        echo "MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}" >> .env
        echo "MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}" >> .env
        echo "" >> .env
        echo "# Backend Configuration" >> .env
        echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
        echo "PORT=${{ secrets.PORT }}" >> .env
        echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
        echo "" >> .env
        echo "# Application Configuration" >> .env
        echo "APP_NAME=${{ secrets.APP_NAME }}" >> .env

    - name: Deploy to VPS
      run: |
        scp .env ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/opt/docker-project/
        ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "cd /opt/docker-project && git pull origin main && docker-compose down && docker-compose up -d --build && docker image prune -f"

    - name: Health Check
      run: |
        sleep 30
        curl -f https://api.ekowlabs.space/api/health || exit 1
        echo "Health check passed!"

    - name: Notify deployment status
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "✅ Deployment successful!"
        else
          echo "❌ Deployment failed!"
        fi
