name: Deploy to VPS

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh

        # Write private key to file from secret
        echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519

        # Start ssh-agent and add key
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_ed25519

        # Add server to known hosts to avoid prompt
        ssh-keyscan -H gcp.ekowlabs.space >> ~/.ssh/known_hosts

        # Test ssh connection
        ssh -o StrictHostKeyChecking=no -v ekowfirmino@gcp.ekowlabs.space "echo SSH connection successful"

    - name: Upload .env file
      run: |
        cat > .env <<EOF
        MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
        MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
        NODE_ENV=${{ secrets.NODE_ENV }}
        PORT=${{ secrets.PORT }}
        MONGODB_URI=${{ secrets.MONGODB_URI }}
        APP_NAME=${{ secrets.APP_NAME }}
        EOF
        scp .env ekowfirmino@gcp.ekowlabs.space:/tmp/.env

    - name: Deploy
      run: |
        ssh ekowfirmino@gcp.ekowlabs.space '
          sudo mkdir -p /opt/docker-project
          sudo chown ekowfirmino:ekowfirmino /opt/docker-project
          if [ ! -d /opt/docker-project/.git ]; then
            cd /opt/docker-project && git clone https://github.com/ekowfirmino/docker.git .
          else
            cd /opt/docker-project && git pull origin main
          fi
          mv /tmp/.env /opt/docker-project/.env
          if ! command -v docker &> /dev/null; then
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
            sudo usermod -aG docker ekowfirmino
            rm get-docker.sh
          fi
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" \
              -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi
          cd /opt/docker-project
          docker-compose down
          docker-compose up -d --build
          docker image prune -f
        '

    - name: Health Check
      run: |
        sleep 30
        curl -f https://api.ekowlabs.space/api/health || exit 1
        echo "Health check passed!"

    - name: Notify deployment status
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "✅ Deployment successful!"
        else
          echo "❌ Deployment failed!"
        fi
